import numpy as np

import acoustotreams
from acoustotreams import AcousticSMatrices


def test_init():
    b = acoustotreams.ScalarPlaneWaveBasisByComp.default([0, 0])
    sm = AcousticSMatrices(np.zeros((2, 2, 1, 1)), basis=b, k0=1)
    assert (sm["up", "down"] == np.zeros((1, 1))).all()


def test_interface():
    b = acoustotreams.ScalarPlaneWaveBasisByComp.default([1, 2])
    sm = AcousticSMatrices.interface(b, 12, [(200, 1029,), (900, 686,)])
    m = acoustotreams.coeffs.fresnel_acoustics(
        [np.sqrt(11), np.sqrt(31)], [200, 900]
    )
    assert (
        sm[0, 0] == m[0, 0]
        and sm[0, 1] == m[0, 1]
        and sm[1, 0] == m[1, 0]
        and sm[1, 1] == m[1, 1]
        and sm.k0 == 12
        and sm.basis == b
        and sm.material == ((900, 686,), (200, 1029,))
    )


def test_slab():
    b = acoustotreams.ScalarPlaneWaveBasisByComp.default([1, 2])
    sm = AcousticSMatrices.slab(3, b, 12, [(200, 1029,), (900, 686,), (100, 343,)])
    stest = AcousticSMatrices.interface(b, 12, [(200, 1029,), (900, 686,)])
    stest = stest.add(AcousticSMatrices.propagation([0, 0, 3], b, 12, (900, 686,)))
    stest = stest.add(AcousticSMatrices.interface(b, 12, [(900, 686,), (100, 343,)]))
    assert sm == stest


class TestArray:
    basis = acoustotreams.ScalarPlaneWaveBasisByComp.diffr_orders([0.5, -1], np.eye(2), 7)
    expect = np.zeros((2, 2, 5, 5), complex)
    expect[0, 0, :, :] = [
        [
            0.979645694563844 + 0.03743860913339489j,
            -0.017857473673999053 - 0.005077635955552676j,
            -0.013734573631049728 - 0.0046245525883680996j,
            -0.024443469729725567 - 0.028669459846426687j,
            -0.018376164691808704 - 0.0016794296265635839j,
        ],
        [
            -0.019823605196670754 - 0.0056366904049734885j,
            0.9708849843014916 + 0.04031767197824951j,
            -0.0069598869114165084 - 0.05888988234327362j,
            -0.028356227993153422 - 0.05907316358840312j,
            -0.018795029420162816 - 0.031674557647168j,
        ],
        [
            -0.017230073084042043 - 0.005801518213746545j,
            -0.00786523130953012 - 0.06655029777295496j,
            0.9733774204079847 + 0.04866102775883646j,
            -0.024748282499230397 - 0.0621489255327363j,
            -0.016937172015851695 - 0.032042486369294125j,
        ],
        [
            -0.029654528360355002 - 0.034781449585204335j,
            -0.030989459802982112 - 0.06455884854994856j,
            -0.02393322891270318 - 0.06010212876387582j,
            0.9374235611255546 + 0.004370404478317288j,
            -0.021882022410520837 - 0.09240662320571531j,
        ],
        [
            -0.02097622301763208 - 0.0019170534755230829j,
            -0.019326481970050186 - 0.0325701946824621j,
            -0.015411374639662323 - 0.029155915837738133j,
            -0.020588831922819812 - 0.08694554817853925j,
            0.9720874797759053 + 0.05307586568278426j,
        ],
    ]
    expect[0, 1, :, :] = [
        [
            -0.011258679597676765 + 0.022395921742739886j,
            -0.014099858804436134 + 0.020625426955153875j,
            -0.00718927006735804 + 0.010009695657248845j,
            -0.01777032615770584 - 0.011935898167403364j,
            -0.011197300241241562 + 0.021853638099321848j,
        ],
        [
            -0.01565227194902255 + 0.02289631380317063j,
            -0.010585028916259502 + 0.0008175736579655417j,
            -0.016307774327155695 + 0.027310306257580956j,
            -0.02547290396198654 - 0.013662254050241638j,
            -0.015610089840426803 + 0.022473961168034913j,
        ],
        [
            -0.0090189657144841 + 0.012557199979875446j,
            -0.01842909502111314 + 0.030862839954717714j,
            -0.003144887663914662 - 0.03142102841372029j,
            -0.017167846023984527 - 0.029801258440375466j,
            -0.00986882859033198 + 0.011381366492891239j,
        ],
        [
            -0.021558749508282765 - 0.014480490479677317j,
            -0.027838382932518536 - 0.014930965882003704j,
            -0.016602444587532073 - 0.028819791440570158j,
            -0.040690501872366926 - 0.06596298380003551j,
            -0.028162896783047266 + 0.0024728170988614065j,
        ],
        [
            -0.012781615260575384 + 0.024945726935193063j,
            -0.016051484310433087 + 0.023109440033314468j,
            -0.008979788037688476 + 0.010356067870662537j,
            -0.026498517250722525 + 0.0023266777937241134j,
            -0.007074728117953598 + 0.003313712517115923j,
        ],
    ]
    expect[1, 0, :, :] = [
        [
            -0.011258679597676765 + 0.022395921742739886j,
            -0.014099858804436134 + 0.020625426955153875j,
            -0.00718927006735804 + 0.010009695657248845j,
            -0.01777032615770584 - 0.011935898167403364j,
            -0.011197300241241562 + 0.021853638099321848j,
        ],
        [
            -0.01565227194902255 + 0.02289631380317063j,
            -0.010585028916259502 + 0.0008175736579655417j,
            -0.016307774327155695 + 0.027310306257580956j,
            -0.02547290396198654 - 0.013662254050241638j,
            -0.015610089840426803 + 0.022473961168034913j,
        ],
        [
            -0.0090189657144841 + 0.012557199979875446j,
            -0.01842909502111314 + 0.030862839954717714j,
            -0.003144887663914662 - 0.03142102841372029j,
            -0.017167846023984527 - 0.029801258440375466j,
            -0.00986882859033198 + 0.011381366492891239j,
        ],
        [
            -0.021558749508282765 - 0.014480490479677317j,
            -0.027838382932518536 - 0.014930965882003704j,
            -0.016602444587532073 - 0.028819791440570158j,
            -0.040690501872366926 - 0.06596298380003551j,
            -0.028162896783047266 + 0.0024728170988614065j,
        ],
        [
            -0.012781615260575384 + 0.024945726935193063j,
            -0.016051484310433087 + 0.023109440033314468j,
            -0.008979788037688476 + 0.010356067870662537j,
            -0.026498517250722525 + 0.0023266777937241134j,
            -0.007074728117953598 + 0.003313712517115923j,
        ],
    ]
    expect[1, 1, :, :] = [
        [
            0.979645694563844 + 0.03743860913339489j,
            -0.017857473673999053 - 0.005077635955552676j,
            -0.013734573631049728 - 0.0046245525883680996j,
            -0.024443469729725567 - 0.028669459846426687j,
            -0.018376164691808704 - 0.0016794296265635839j,
        ],
        [
            -0.019823605196670754 - 0.0056366904049734885j,
            0.9708849843014916 + 0.04031767197824951j,
            -0.0069598869114165084 - 0.05888988234327362j,
            -0.028356227993153422 - 0.05907316358840312j,
            -0.018795029420162816 - 0.031674557647168j,
        ],
        [
            -0.017230073084042043 - 0.005801518213746545j,
            -0.00786523130953012 - 0.06655029777295496j,
            0.9733774204079847 + 0.04866102775883646j,
            -0.024748282499230397 - 0.0621489255327363j,
            -0.016937172015851695 - 0.032042486369294125j,
        ],
        [
            -0.029654528360355002 - 0.034781449585204335j,
            -0.030989459802982112 - 0.06455884854994856j,
            -0.02393322891270318 - 0.06010212876387582j,
            0.9374235611255546 + 0.004370404478317288j,
            -0.021882022410520837 - 0.09240662320571531j,
        ],
        [
            -0.02097622301763208 - 0.0019170534755230829j,
            -0.019326481970050186 - 0.0325701946824621j,
            -0.015411374639662323 - 0.029155915837738133j,
            -0.020588831922819812 - 0.08694554817853925j,
            0.9720874797759053 + 0.05307586568278426j,
        ],
    ]

    def test(self):
        tm = acoustotreams.AcousticTMatrix.sphere(4, 12, [0.2], [(900, 686,), ()]).latticeinteraction.solve(
            self.basis.lattice, self.basis.kpar[:2]
        )
        sm = AcousticSMatrices.from_array(tm, self.basis)
        assert all(
            np.all(np.abs(sm[i, j] - self.expect[i, j]) < 1e-8)
            for i in range(2)
            for j in range(2)
        )